@{
    ViewData["Title"] = "pdf";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@inject ComplaintFormCore.Resources.SharedViewLocalizer Localizer

@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@section CustomScripts {
    <script src="~/lib/vue/vue.js"></script>
    <script src="https://surveyjs.azureedge.net/1.7.26/survey.vue.js"></script>
    <script src="~/lib/promise-polyfill/polyfill.js"></script>
    <script src="~/lib/fetch/fetch.js"></script>
    <script src="~/js/survey/surveyPDF.js"></script>

    <script src="~/js/survey/jspdf.js"></script>
    <script src="https://surveyjs.azureedge.net/1.7.26/survey.pdf.js"></script>

    <link href="https://surveyjs.azureedge.net/1.7.26/modern.css" type="text/css" rel="stylesheet" />

    <script>
        //$(document).ready(function () {





        //});

        //Survey
        //    .StylesManager
        //    .applyTheme("modern");

        function saveSurveyToPdf(filename, surveyModel, json, pdfWidth, pdfHeight) {

           // var fontlist = getFontList();

            var options = {
                fontSize: 14,
                margins: {
                    left: 10,
                    right: 10,
                    top: 10,
                    bot: 10
                },
                format: [pdfWidth, pdfHeight],
                fontName: 'times',
                fontStyle : 'normal'
            };

            var surveyPDF = new SurveyPDF.SurveyPDF(json, options);
            surveyPDF.data = surveyModel.data;
           // surveyPDF.

            try {
                surveyPDF.save(filename);
            }
            catch (e) {
                console.log("Error", e.stack);
                console.log("Error", e.name);
                console.log("Error", e.message);
            }


        }

        function exportToPDF() {
            var storageName_PA = "SurveyJS_LoadState_PA";

            var storageSt = window
                .localStorage
                .getItem(storageName_PA) || "";

            var json = "/sample-data/survey_test.json";

            fetch(json)
                .then(response => response.json())
                .then(json => {

                    survey = new Survey.Model(json);

                    var data = {};
                    if (storageSt) {
                        data = JSON.parse(storageSt);

                        survey.data = data;


                        saveSurveyToPdf("surveyResult.pdf", survey, json, 500, 500)
                    }
                    else {

                    }

                });
        }
    </script>
}

<button id="pdfPreviewBtn" style="margin:10px" onclick="exportToPDF()">PDF Preview</button>